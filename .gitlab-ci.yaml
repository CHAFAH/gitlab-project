stages:
  - build
  - static_code_analysis
  - test
  - deploy

# Template for reusable build stages
.build-template:
  stage: build
  script:
    - echo "Building on $PLATFORM with $TOOLCHAIN_IMAGE"
    - mkdir -p build/$PLATFORM/
    - touch build/$PLATFORM/$PLATFORM-build-output
    - echo "Build complete for $PLATFORM"
  artifacts:
    paths:
      - build/$PLATFORM/
  tags:
    - docker

# Build jobs for each platform
build:PowerPC:
  extends: .build-template
  variables:
    PLATFORM: "PowerPC"
    TOOLCHAIN_IMAGE: "powerpc-toolchain:latest"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'

build:imx8:
  extends: .build-template
  variables:
    PLATFORM: "imx8"
    TOOLCHAIN_IMAGE: "imx8-toolchain:latest"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_TAG'

build:Linux-x:
  extends: .build-template
  variables:
    PLATFORM: "Linux-x"
    TOOLCHAIN_IMAGE: "linux-x-toolchain:latest"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'

# Static code analysis using an external shared template
include:
  - project: 'external/repo-with-templates'
    file: '/static-code-analysis.yml'

# Placeholder for static code analysis stages (assuming external templates handle details)
static_code_analysis:PowerPC:
  stage: static_code_analysis
  variables:
    PLATFORM: "PowerPC"
    ARGUMENTS: "--analyze-powerpc"
  rules:
    - exists:
        - "**/*.c"
        - "**/*.cpp"

static_code_analysis:imx8:
  stage: static_code_analysis
  variables:
    PLATFORM: "imx8"
    ARGUMENTS: "--analyze-imx8"
  rules:
    - exists:
        - "**/*.c"
        - "**/*.cpp"

static_code_analysis:Linux-x:
  stage: static_code_analysis
  variables:
    PLATFORM: "Linux-x"
    ARGUMENTS: "--analyze-linux-x"
  rules:
    - exists:
        - "**/*.c"
        - "**/*.cpp"

# Test jobs for each platform
test:PowerPC:
  stage: test
  script:
    - echo "Testing PowerPC build"
    - ./run-tests.sh --platform=PowerPC
  dependencies:
    - build:PowerPC
  tags:
    - docker

test:imx8:
  stage: test
  script:
    - echo "Testing imx8 build"
    - ./run-tests.sh --platform=imx8
  dependencies:
    - build:imx8
  tags:
    - docker

test:Linux-x:
  stage: test
  script:
    - echo "Testing Linux-x build"
    - ./run-tests.sh --platform=Linux-x
  dependencies:
    - build:Linux-x
  tags:
    - docker

# Deploy jobs for each platform
deploy:PowerPC:
  stage: deploy
  script:
    - echo "Deploying PowerPC build"
    - ./deploy.sh --platform=PowerPC
    - echo "Smoke testing PowerPC build"
    - ./smoke-test.sh --platform=PowerPC
  dependencies:
    - build:PowerPC
  tags:
    - docker

deploy:imx8:
  stage: deploy
  script:
    - echo "Deploying imx8 build"
    - ./deploy.sh --platform=imx8
    - echo "Smoke testing imx8 build"
    - ./smoke-test.sh --platform=imx8
  dependencies:
    - build:imx8
  tags:
    - docker

deploy:Linux-x:
  stage: deploy
  script:
    - echo "Deploying Linux-x build"
    - ./deploy.sh --platform=Linux-x
    - echo "Smoke testing Linux-x build"
    - ./smoke-test.sh --platform=Linux-x
  dependencies:
    - build:Linux-x
  tags:
    - docker
