stages:
  - build
  - static_code_analysis
  - test
  - deploy

# Reusable build template
.build-template:
  stage: build
  script:
    - echo "Building on $PLATFORM with $TOOLCHAIN_IMAGE"
    - echo "Build complete for $PLATFORM"
  artifacts:
    paths:
      - build/$PLATFORM/

# Build for PowerPC platform
build:PowerPC:
  extends: .build-template
  variables:
    PLATFORM: "PowerPC"
    TOOLCHAIN_IMAGE: "powerpc-toolchain:latest"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"

# Build for imx8 platform
build:imx8:
  extends: .build-template
  variables:
    PLATFORM: "imx8"
    TOOLCHAIN_IMAGE: "imx8-toolchain:latest"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_TAG

# Build for Linux-x platform
build:Linux-x:
  extends: .build-template
  variables:
    PLATFORM: "Linux-x"
    TOOLCHAIN_IMAGE: "linux-x-toolchain:latest"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"

# Static code analysis for PowerPC
static_code_analysis:PowerPC:
  stage: static_code_analysis
  script:
    - echo "Running static analysis for PowerPC"
    - ./run-static-analysis.sh --platform=PowerPC
  variables:
    PLATFORM: "PowerPC"
  rules:
    - exists:
        - "**/*.c"
        - "**/*.cpp"

# Static code analysis for imx8
static_code_analysis:imx8:
  stage: static_code_analysis
  script:
    - echo "Running static analysis for imx8"
    - ./run-static-analysis.sh --platform=imx8
  variables:
    PLATFORM: "imx8"
  rules:
    - exists:
        - "**/*.c"
        - "**/*.cpp"

# Static code analysis for Linux-x
static_code_analysis:Linux-x:
  stage: static_code_analysis
  script:
    - echo "Running static analysis for Linux-x"
    - ./run-static-analysis.sh --platform=Linux-x
  variables:
    PLATFORM: "Linux-x"
  rules:
    - exists:
        - "**/*.c"
        - "**/*.cpp"

# Test for PowerPC
test:PowerPC:
  stage: test
  script:
    - echo "Testing PowerPC build"
    - ./run-tests.sh --platform=PowerPC
  dependencies:
    - build:PowerPC

# Test for imx8
test:imx8:
  stage: test
  script:
    - echo "Testing imx8 build"
    - ./run-tests.sh --platform=imx8
  dependencies:
    - build:imx8

# Test for Linux-x
test:Linux-x:
  stage: test
  script:
    - echo "Testing Linux-x build"
    - ./run-tests.sh --platform=Linux-x
  dependencies:
    - build:Linux-x

# Deploy for PowerPC
deploy:PowerPC:
  stage: deploy
  script:
    - echo "Deploying PowerPC build"
    - ./deploy.sh --platform=PowerPC
    - echo "Smoke testing PowerPC build"
    - ./smoke-test.sh --platform=PowerPC
  dependencies:
    - build:PowerPC

# Deploy for imx8
deploy:imx8:
  stage: deploy
  script:
    - echo "Deploying imx8 build"
    - ./deploy.sh --platform=imx8
    - echo "Smoke testing imx8 build"
    - ./smoke-test.sh --platform=imx8
  dependencies:
    - build:imx8

# Deploy for Linux-x
deploy:Linux-x:
  stage: deploy
  script:
    - echo "Deploying Linux-x build"
    - ./deploy.sh --platform=Linux-x
    - echo "Smoke testing Linux-x build"
    - ./smoke-test.sh --platform=Linux-x
  dependencies:
    - build:Linux-x
